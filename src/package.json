{
    "name": "lsm",
    "description": "Library Safety Manager - Stops OSV Malware from ever entering your computer",
    "version": "1.0.0",
    "type": "module",
    "scripts": {
        "deploy": "jf worker deploy",
        "undeploy": "jf worker rm \"lsm\"",
        "test": "jest",
        "test-docker": "dotenv -- bash -c 'docker pull $JFROG_TRIAL_ID.jfrog.io/docker/ubuntu:latest'",
        "test-docker-dangerous": "echo 'This is correct syntax, but its likely been taken down by the Docker team due to being malicious.'; dotenv -- bash -c 'docker pull $JFROG_TRIAL_ID.jfrog.io/docker/linux:3.11.0-12.19'",
        "test-npm": "dotenv -- bash -c 'npm install riot --registry https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/npm/npm/'",
        "test-npm-dangerous": "dotenv -- bash -c 'npm install hts-open-dex-react-ui@1.0.0 --registry https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/npm/npm/'",
        "test-go": "dotenv -e test.env -- bash -c \"export GOPROXY=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/api/go/go-test; go get github.com/gin-gonic/gin@v1.10.0\"",
        "test-go-dangerous": "dotenv -- bash -c 'set GOPROXY=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/api/go/go-test && go get github.com/mattermost/mattermost@v10.3.1'",
        "test-python": "cd ../tests/python; rm -rf pvenv; python3 -m venv pvenv; source pvenv/bin/activate; cp -r .pip/pip.conf pvenv/pip.conf; python3 -m pip install numpy --no-cache-dir",
        "test-python-dangerous": "cd ../tests/python; rm -rf pvenv; python3 -m venv pvenv; source pvenv/bin/activate; cp -r .pip/pip.conf pvenv/pip.conf; python3 -m pip install strawberry-graphql==0.182.0 --no-cache-dir",
        "test-ruby": "gem install bundler",
        "test-ruby-dangerous": "gem install bundler -v 0.3.0",
	    "test-gradle": "cross-env GRADLE_REPO_URL=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/java ../tests/gradle/gradlew --project-dir ../tests/gradle clean addDependencyAndBuild --refresh-dependencies -DrepoUrl=$GRADLE_REPO_URL -Pdependency=org.apache.mina:mina-core:2.2.4",
        "test-gradle-dangerous":  "cross-env GRADLE_REPO_URL=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/java ../tests/gradle/gradlew --project-dir ../tests/gradle clean addDependencyAndBuild --refresh-dependencies -DrepoUrl=$GRADLE_REPO_URL -Pdependency=org.apache.mina:mina-core:2.2.1",
        "test-cargo": "dotenv -- bash -c 'cd ../tests/rust/; CARGO_REGISTRIES_DEFAULT=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/cargo/cargo-remote cargo add serde'",
        "test-cargo-dangerous": "dotenv -- bash -c 'cd ../tests/rust/; CARGO_REGISTRIES_DEFAULT=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/cargo/cargo-remote cargo add serde-json-wasm@1.0.0'"
    },
    "license": "ISC",
    "devDependencies": {
        "@golevelup/ts-jest": "^0.4.0",
        "@types/jest": "^29.5.12",
        "cross-env": "^7.0.3",
        "dotenv-cli": "^8.0.0",
        "jest": "^29.7.0",
        "jest-jasmine2": "^29.7.0",
        "jfrog-workers": "^0.4.0",
        "ts-jest": "^29.1.2"
    },
    "jest": {
        "moduleFileExtensions": [
            "ts",
            "js"
        ],
        "rootDir": ".",
        "testEnvironment": "node",
        "clearMocks": true,
        "maxConcurrency": 1,
        "testRegex": "\\.spec\\.ts$",
        "moduleDirectories": [
            "node_modules"
        ],
        "collectCoverageFrom": [
            "**/*.ts"
        ],
        "coverageDirectory": "../coverage",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "testRunner": "jest-jasmine2",
        "verbose": true
    }
}