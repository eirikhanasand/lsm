{
  "name": "lsm-support",
  "version": "1.0.0",
  "description": "Support scripts for Artifactory testing management",
  "license": "ISC",
  "author": "",
  "type": "module",
  "main": "index.js",
  "scripts": {
    "repositories": "rm -rf dist && tsc && node dist/src/repositories.js",
    "test-docker": "dotenv -- bash -c 'docker pull $JFROG_TRIAL_ID.jfrog.io/docker/ubuntu:latest'",
    "test-docker-dangerous": "echo 'This is correct syntax, but its likely been taken down by the Docker team due to being malicious.'; dotenv -- bash -c 'docker pull $JFROG_TRIAL_ID.jfrog.io/docker/linux:3.11.0-12.19'",
    "test-npm": "dotenv -- bash -c 'npm install riot --registry https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/npm/npm/'",
    "test-npm-dangerous": "dotenv -- bash -c 'npm install mathlive@0.103.0 --registry https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/npm/npm/'",
    "test-go": "dotenv -e test.env -- bash -c \"export GOPROXY=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/api/go/go-test; go get github.com/gin-gonic/gin@v1.10.0\"",
    "test-go-dangerous": "dotenv -- bash -c 'set GOPROXY=https://$JFROG_USERNAME:$JFROG_ACCESS_TOKEN@$JFROG_TRIAL_ID.jfrog.io/artifactory/api/go/go-test && go get github.com/mattermost/mattermost@v10.3.1'",
    "test-python": "cd ../tests/python; rm -rf pvenv; python3 -m venv pvenv; source pvenv/bin/activate; cp -r .pip/pip.conf pvenv/pip.conf; python3 -m pip install numpy --no-cache-dir",
    "test-python-dangerous": "cd ../tests/python; rm -rf pvenv; python3 -m venv pvenv; source pvenv/bin/activate; cp -r .pip/pip.conf pvenv/pip.conf; python3 -m pip install strawberry-graphql==0.182.0 --no-cache-dir",
    "test-ruby": "gem install bundler",
    "test-ruby-dangerous": "gem install actionpack -v 5.2.0",
    "test-gradle": "cross-env GRADLE_REPO_URL=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/java JFROG_USERNAME=$JFROG_USERNAME JFROG_ACCESS_TOKEN=$JFROG_ACCESS_TOKEN JFROG_TRIAL_ID=$JFROG_TRIAL_ID.jfrog.io/artifactory ../tests/gradle/gradlew --project-dir ../tests/gradle clean addDependencyAndBuild --refresh-dependencies -DrepoUrl=$GRADLE_REPO_URL -Pdependency=org.apache.mina:mina-core:2.2.4",
    "test-gradle-dangerous": "cross-env GRADLE_REPO_URL=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/java JFROG_USERNAME=$JFROG_USERNAME JFROG_ACCESS_TOKEN=$JFROG_ACCESS_TOKEN JFROG_TRIAL_ID=$JFROG_TRIAL_ID.jfrog.io/artifactory ../tests/gradle/gradlew --project-dir ../tests/gradle clean addDependencyAndBuild --refresh-dependencies -DrepoUrl=$GRADLE_REPO_URL -Pdependency=org.apache.mina:mina-core:2.2.1",
    "test-cargo": "dotenv -- bash -c 'cd ../tests/rust/; CARGO_REGISTRIES_DEFAULT=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/cargo/cargo-remote cargo add serde'",
    "test-maven": "cross-env MAVEN_REPO_URL=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/java JFROG_USERNAME=$JFROG_USERNAME JFROG_ACCESS_TOKEN=$JFROG_ACCESS_TOKEN mvn clean install -U -Dbuild.cache.enabled=false -Dmaven.repo.remote=$MAVEN_REPO_URL -Ddependency=org.apache.mina:mina-core:2.2.4 -s ../tests/maven/settings.xml -f ../tests/maven/pom.xml -Ddynamic.dependency.groupId=org.apache.mina -Ddynamic.dependency.artifactId=mina-core -Ddynamic.dependency.version=2.2.4",
    "test-maven-dangerous": "cross-env MAVEN_REPO_URL=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/java JFROG_USERNAME=$JFROG_USERNAME JFROG_ACCESS_TOKEN=$JFROG_ACCESS_TOKEN mvn clean install -U -Dbuild.cache.enabled=false -Dmaven.repo.remote=$MAVEN_REPO_URL -Ddependency=org.apache.mina:mina-core:2.2.4 -s ../tests/maven/settings.xml -f ../tests/maven/pom.xml -Ddynamic.dependency.groupId=org.apache.mina -Ddynamic.dependency.artifactId=mina-core -Ddynamic.dependency.version=2.2.1",
    "test-cargo-dangerous": "dotenv -- bash -c 'cd ../tests/rust/; CARGO_REGISTRIES_DEFAULT=https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/cargo/cargo-remote cargo add serde-json-wasm@1.0.0'",
    "test-nuget": "dotenv -e test.env -- bash -c 'nuget install AutoMapper -Source https://$JFROG_TRIAL_ID.jfrog.io/artifactory/api/nuget/v3/nuget-nuget-remote/index.json'",
    "test-nuget-dangerous": "dotenv -- bash -c 'nuget install Malicious.Package -Source https://$JFROG_TRIAL_ID.jfrog.io/artifactory/nuget-nuget-remote'"
  },
  "devDependencies": {
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "riot": "^9.4.4"
  }
}
